const express = require("express");
const path = require("path");
const cors = require("cors");
const fs = require("fs");

const app = express();
const PORT = process.env.PORT || 4000;

app.use(cors());
app.use(express.json());

// –†–∞–∑–¥–∞—ë–º —Å—Ç–∞—Ç–∏–∫—É (–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–∞–π—Ç —Å 4000)
app.use(express.static(path.join(__dirname, "public")));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname,  "public", "inv.html"));
});

// –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ—Å—Ç–µ–π
const DATA_FILE = path.join(__dirname, "data.json");

// –§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è –≥–æ—Å—Ç–µ–π
const readData = () => {
    if (!fs.existsSync(DATA_FILE)) return [];
    return JSON.parse(fs.readFileSync(DATA_FILE, "utf-8"));
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≥–æ—Å—Ç–µ–π
const writeData = (data) => {
    fs.writeFileSync(DATA_FILE, JSON.stringify(data, null, 2));
};

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π
app.get("/guests", (req, res) => {
    const guests = readData();
    res.json(guests);
});

// üìå –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É
app.post("/submit", (req, res) => {
    const { name, attending } = req.body;
    if (!name || !attending) {
        return res.status(400).json({ message: "–ë–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑." });
    }

    const guests = readData();
    guests.push({ name, attending });
    writeData(guests);

    res.json({ message: "“ö–∞—Ç—ã—Å—É —Å”ô—Ç—Ç—ñ —Ä–∞—Å—Ç–∞–ª–¥—ã!" });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
console.log("PORT –∏–∑ process.env:", process.env.PORT);

app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
